basePath: /api
definitions:
  dto.CategoryRequestDTO:
    properties:
      description:
        maxLength: 255
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
    required:
    - name
    type: object
  dto.CategoryResponseDTO:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  dto.ExpenseRequestDTO:
    properties:
      amount:
        type: number
      category_id:
        minimum: 1
        type: integer
      date:
        description: 'Format: dd-mm-yyyy or yyyy-mm-dd'
        example: 12-12-2025
        format: date
        type: string
      description:
        maxLength: 255
        type: string
    required:
    - amount
    - date
    type: object
  dto.ExpenseResponseDTO:
    properties:
      amount:
        type: number
      category_id:
        type: integer
      category_name:
        description: Category name resolved from relationship
        type: string
      date:
        description: 'Format: yyyy-mm-dd'
        type: string
      description:
        type: string
      id:
        type: integer
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: Developer Support
    url: http://example.com/support
  description: RESTful API for managing expenses and categories
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://example.com/terms/
  title: Go Expense Tracker API
  version: "1.0"
paths:
  /v1/categories:
    get:
      description: Retrieve list of all categories with pagination and filtering
      parameters:
      - description: Filter by category name (partial match)
        in: query
        name: name
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.CategoryResponseDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a category by providing name and description
      parameters:
      - description: Category Data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CategoryResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new category
      tags:
      - categories
  /v1/categories/{id}:
    delete:
      description: Remove category by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete category
      tags:
      - categories
    get:
      description: Retrieve category details by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Modify category name or description by its ID
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Category Data
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/dto.CategoryRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CategoryResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update category
      tags:
      - categories
  /v1/expenses:
    get:
      description: Retrieve all recorded expenses with pagination and filtering
      parameters:
      - description: Filter by description (partial match)
        in: query
        name: description
        type: string
      - description: Filter by category ID
        in: query
        name: category_id
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ExpenseResponseDTO'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all expenses
      tags:
      - expenses
    post:
      consumes:
      - application/json
      description: Add a new expense entry including amount, category, and description
      parameters:
      - description: Expense Data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/dto.ExpenseRequestDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.ExpenseResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new expense
      tags:
      - expenses
  /v1/expenses/{id}:
    delete:
      description: Remove a specific expense entry by ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete expense
      tags:
      - expenses
    get:
      description: Retrieve details of a specific expense by its ID
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ExpenseResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get expense by ID
      tags:
      - expenses
    put:
      consumes:
      - application/json
      description: Update details of a specific expense
      parameters:
      - description: Expense ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Expense Data
        in: body
        name: expense
        required: true
        schema:
          $ref: '#/definitions/dto.ExpenseRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ExpenseResponseDTO'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update expense
      tags:
      - expenses
schemes:
- http
swagger: "2.0"
